{"is_source_file": true, "format": "TypeScript", "description": "This file contains core game logic for a Tetris game, including Tetromino definitions, shape manipulation, board management, and random sequence generation.", "external_files": ["./types"], "external_methods": ["shuffle", "randomSeededRNG"], "published": ["getTetromino", "createBagRNG", "createEmptyBoard", "rotate", "isValidPosition", "mergeBoard", "clearRows", "randomSeededRNG"], "classes": [], "methods": [{"name": "export function getTetromino(type: TetrominoType): Tetromino { getTetromino", "description": "Returns the shape and color of a specific Tetromino type.", "scope": "", "scopeKind": ""}, {"name": "export function createBagRNG(rng: () => number) { createBagRNG", "description": "Creates a generator function that produces a sequence of Tetromino types using the 'bag' system, avoiding global state.", "scope": "", "scopeKind": ""}, {"name": "export function createEmptyBoard(rows = 20, cols = 10): Board { createEmptyBoard", "description": "Creates a new empty game board with specified rows and columns.", "scope": "", "scopeKind": ""}, {"name": "export function rotate(matrix: number[][]): number[][] { rotate", "description": "Rotates a 2D matrix (Tetromino shape) clockwise.", "scope": "", "scopeKind": ""}, {"name": "export function isValidPosition( isValidPosition", "description": "Checks whether a given shape at a specified position is valid on the current board without collisions or out-of-bounds.", "scope": "", "scopeKind": ""}, {"name": "export function mergeBoard( mergeBoard", "description": "Merges a Tetromino shape into the board at a given position with a specified color.", "scope": "", "scopeKind": ""}, {"name": "export function clearRows(board: Board): { board: Board; cleared: number } { clearRows", "description": "Clears filled rows from the board and returns the new board state along with the count of cleared rows.", "scope": "", "scopeKind": ""}, {"name": "export function randomSeededRNG(seed: number) { randomSeededRNG", "description": "Creates a deterministic pseudo-random number generator based on a seed, useful for reproducible game scenarios.", "scope": "", "scopeKind": ""}, {"name": "function shuffle(array: TetrominoType[], rng: () => number): TetrominoType[] { shuffle", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["shuffle", "Array.from", "board.every", "new Array", "Array.prototype.push"], "search-terms": ["Tetromino definitions", "createBagRNG", "board manipulation", "rotate function", "shuffle algorithm", "Tetris game logic"], "state": 2, "file_id": 17, "knowledge_revision": 43, "git_revision": "", "revision_history": [{"35": ""}, {"43": ""}], "ctags": [{"_type": "tag", "name": "N", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  const N = matrix.length;$/", "language": "TypeScript", "kind": "constant", "scope": "rotate", "scopeKind": "function"}, {"_type": "tag", "name": "TETROMINOS", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^const TETROMINOS: Record<TetrominoType, Tetromino> = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "TETROMINO_SEQUENCE", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^const TETROMINO_SEQUENCE: TetrominoType[] = [\"I\", \"O\", \"T\", \"S\", \"Z\", \"J\", \"L\"];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "Window", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  interface Window {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "__tetrisBag", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^    __tetrisBag?: TetrominoType[];$/", "language": "TypeScript", "kind": "property", "scope": "Window", "scopeKind": "interface"}, {"_type": "tag", "name": "bx", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^        const bx = pos.x + x;$/", "language": "TypeScript", "kind": "constant", "scope": "isValidPosition", "scopeKind": "function"}, {"_type": "tag", "name": "bx", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^        const bx = pos.x + x;$/", "language": "TypeScript", "kind": "constant", "scope": "mergeBoard", "scopeKind": "function"}, {"_type": "tag", "name": "by", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^        const by = pos.y + y;$/", "language": "TypeScript", "kind": "constant", "scope": "isValidPosition", "scopeKind": "function"}, {"_type": "tag", "name": "by", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^        const by = pos.y + y;$/", "language": "TypeScript", "kind": "constant", "scope": "mergeBoard", "scopeKind": "function"}, {"_type": "tag", "name": "clearRows", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function clearRows(board: Board): { board: Board; cleared: number } {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "cleared", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  let cleared = 0;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "cols", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  const cols = board[0].length;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createBagRNG", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function createBagRNG(rng: () => number) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createEmptyBoard", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function createEmptyBoard(rows = 20, cols = 10): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getTetromino", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function getTetromino(type: TetrominoType): Tetromino {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isFull", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^    const isFull = board[y].every((cell) => cell.filled);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "isValidPosition", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function isValidPosition($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "j", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^    const j = Math.floor(rng() * (i + 1));$/", "language": "TypeScript", "kind": "constant", "scope": "shuffle", "scopeKind": "function"}, {"_type": "tag", "name": "mergeBoard", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function mergeBoard($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "newBoard", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  const newBoard: Board = [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "newBoard", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  const newBoard: Board = board.map((row) =>$/", "language": "TypeScript", "kind": "constant", "scope": "mergeBoard", "scopeKind": "function"}, {"_type": "tag", "name": "randomSeededRNG", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function randomSeededRNG(seed: number) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  const result: number[][] = Array.from({ length: N }, () => Array(N).fill(0));$/", "language": "TypeScript", "kind": "constant", "scope": "rotate", "scopeKind": "function"}, {"_type": "tag", "name": "rotate", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^export function rotate(matrix: number[][]): number[][] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "rows", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  const rows = board.length;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "shuffle", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^function shuffle(array: TetrominoType[], rng: () => number): TetrominoType[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "y", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^    const isFull = board[y].every((cell) => cell.filled);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "y", "path": "/home/kavia/workspace/code-generation/react-tetris-game-50826-50835/tetris_frontend/src/tetris/engine.ts", "pattern": "/^  for (let y = 0; y < rows; y++) {$/", "language": "TypeScript", "kind": "variable"}], "hash": "55e16613ec4265a3c701167453451bae", "format-version": 4, "code-base-name": "tetris_frontend", "filename": "tetris_frontend/src/tetris/engine.ts", "fields": [{"name": "interface Window {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tetrisBag?: TetrominoType[];", "scope": "Window", "scopeKind": "interface", "description": "unavailable"}, {"name": "let cleared = 0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "for (let y = 0; y < rows; y++) {", "scope": "", "scopeKind": "", "description": "unavailable"}]}